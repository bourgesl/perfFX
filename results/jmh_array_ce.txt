WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/home/marlin/branches/perfFX/target/PerfFX-benchmarks.jar) to field java.io.Console.cs
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH version: 1.23
# VM version: JDK 11.0.6, OpenJDK 64-Bit Server VM, 11.0.6+9-jvmci-19.3-b07
# VM invoker: /home/bourgesl/apps/graalvm-ce-java11-19.3.1//bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions
# Warmup: 5 iterations, 2 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.sample.IntrinsicsArrayCopy_AverageTime.manual

# Run progress: 0,00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 87061,859 ±(99.9%) 383,395 ns/op
# Warmup Iteration   2: 86569,617 ±(99.9%) 196,589 ns/op
# Warmup Iteration   3: 86626,330 ±(99.9%) 199,292 ns/op
# Warmup Iteration   4: 114984,972 ±(99.9%) 377,730 ns/op
# Warmup Iteration   5: 114662,880 ±(99.9%) 264,107 ns/op
Iteration   1: 115292,957 ±(99.9%) 545,206 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   118016,000 ns/op
                 manual·p0.95:   130528,000 ns/op
                 manual·p0.99:   185856,000 ns/op
                 manual·p0.999:  293719,040 ns/op
                 manual·p0.9999: 365568,000 ns/op
                 manual·p1.00:   365568,000 ns/op

Iteration   2: 114817,523 ±(99.9%) 391,240 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   121472,000 ns/op
                 manual·p0.95:   130816,000 ns/op
                 manual·p0.99:   172531,200 ns/op
                 manual·p0.999:  216784,128 ns/op
                 manual·p0.9999: 294912,000 ns/op
                 manual·p1.00:   294912,000 ns/op

Iteration   3: 117015,150 ±(99.9%) 2307,256 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   121472,000 ns/op
                 manual·p0.95:   133632,000 ns/op
                 manual·p0.99:   197376,000 ns/op
                 manual·p0.999:  344932,352 ns/op
                 manual·p0.9999: 5234688,000 ns/op
                 manual·p1.00:   5234688,000 ns/op

Iteration   4: 115275,736 ±(99.9%) 443,911 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   118272,000 ns/op
                 manual·p0.95:   132096,000 ns/op
                 manual·p0.99:   176727,040 ns/op
                 manual·p0.999:  230573,056 ns/op
                 manual·p0.9999: 515072,000 ns/op
                 manual·p1.00:   515072,000 ns/op

Iteration   5: 115615,034 ±(99.9%) 435,263 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   118016,000 ns/op
                 manual·p0.95:   133760,000 ns/op
                 manual·p0.99:   178176,000 ns/op
                 manual·p0.999:  222592,000 ns/op
                 manual·p0.9999: 400384,000 ns/op
                 manual·p1.00:   400384,000 ns/op

Iteration   6: 115392,821 ±(99.9%) 415,115 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   118144,000 ns/op
                 manual·p0.95:   133632,000 ns/op
                 manual·p0.99:   174080,000 ns/op
                 manual·p0.999:  226155,520 ns/op
                 manual·p0.9999: 257536,000 ns/op
                 manual·p1.00:   257536,000 ns/op

Iteration   7: 114814,514 ±(99.9%) 402,432 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   117888,000 ns/op
                 manual·p0.95:   131328,000 ns/op
                 manual·p0.99:   174336,000 ns/op
                 manual·p0.999:  216548,864 ns/op
                 manual·p0.9999: 262144,000 ns/op
                 manual·p1.00:   262144,000 ns/op

Iteration   8: 115349,981 ±(99.9%) 569,750 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   118016,000 ns/op
                 manual·p0.95:   132352,000 ns/op
                 manual·p0.99:   192051,200 ns/op
                 manual·p0.999:  286556,160 ns/op
                 manual·p0.9999: 458240,000 ns/op
                 manual·p1.00:   458240,000 ns/op

Iteration   9: 114984,040 ±(99.9%) 555,502 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   117888,000 ns/op
                 manual·p0.95:   128256,000 ns/op
                 manual·p0.99:   193843,200 ns/op
                 manual·p0.999:  282588,160 ns/op
                 manual·p0.9999: 364544,000 ns/op
                 manual·p1.00:   364544,000 ns/op

Iteration  10: 114785,302 ±(99.9%) 400,017 ns/op
                 manual·p0.00:   111360,000 ns/op
                 manual·p0.50:   111360,000 ns/op
                 manual·p0.90:   118144,000 ns/op
                 manual·p0.95:   130816,000 ns/op
                 manual·p0.99:   176120,320 ns/op
                 manual·p0.999:  210148,096 ns/op
                 manual·p0.9999: 306176,000 ns/op
                 manual·p1.00:   306176,000 ns/op



Result "org.sample.IntrinsicsArrayCopy_AverageTime.manual":
  N = 86663
  mean = 115330,771 ±(99.9%) 267,108 ns/op

  Histogram, ns/op:
    [      0,000,  500000,000) = 86658 
    [ 500000,000, 1000000,000) = 2 
    [1000000,000, 1500000,000) = 1 
    [1500000,000, 2000000,000) = 0 
    [2000000,000, 2500000,000) = 0 
    [2500000,000, 3000000,000) = 1 
    [3000000,000, 3500000,000) = 0 
    [3500000,000, 4000000,000) = 0 
    [4000000,000, 4500000,000) = 0 
    [4500000,000, 5000000,000) = 0 
    [5000000,000, 5500000,000) = 1 

  Percentiles, ns/op:
      p(0,0000) = 111360,000 ns/op
     p(50,0000) = 111360,000 ns/op
     p(90,0000) = 118016,000 ns/op
     p(95,0000) = 131584,000 ns/op
     p(99,0000) = 180736,000 ns/op
     p(99,9000) = 260694,016 ns/op
     p(99,9900) = 390830,490 ns/op
     p(99,9990) = 5234688,000 ns/op
     p(99,9999) = 5234688,000 ns/op
    p(100,0000) = 5234688,000 ns/op


# JMH version: 1.23
# VM version: JDK 11.0.6, OpenJDK 64-Bit Server VM, 11.0.6+9-jvmci-19.3-b07
# VM invoker: /home/bourgesl/apps/graalvm-ce-java11-19.3.1//bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions
# Warmup: 5 iterations, 2 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.sample.IntrinsicsArrayCopy_AverageTime.system

# Run progress: 50,00% complete, ETA 00:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 16823,423 ±(99.9%) 40,352 ns/op
# Warmup Iteration   2: 16716,302 ±(99.9%) 52,049 ns/op
# Warmup Iteration   3: 16725,197 ±(99.9%) 38,064 ns/op
# Warmup Iteration   4: 16778,586 ±(99.9%) 41,492 ns/op
# Warmup Iteration   5: 17060,513 ±(99.9%) 67,279 ns/op
Iteration   1: 16893,318 ±(99.9%) 59,933 ns/op
                 system·p0.00:   16016,000 ns/op
                 system·p0.50:   16224,000 ns/op
                 system·p0.90:   17184,000 ns/op
                 system·p0.95:   17664,000 ns/op
                 system·p0.99:   34211,840 ns/op
                 system·p0.999:  50349,568 ns/op
                 system·p0.9999: 70142,003 ns/op
                 system·p1.00:   190976,000 ns/op

Iteration   2: 16915,753 ±(99.9%) 415,711 ns/op
                 system·p0.00:   16016,000 ns/op
                 system·p0.50:   16224,000 ns/op
                 system·p0.90:   17152,000 ns/op
                 system·p0.95:   17696,000 ns/op
                 system·p0.99:   32672,000 ns/op
                 system·p0.999:  48531,840 ns/op
                 system·p0.9999: 126188,416 ns/op
                 system·p1.00:   3731456,000 ns/op

Iteration   3: 17125,015 ±(99.9%) 93,590 ns/op
                 system·p0.00:   16208,000 ns/op
                 system·p0.50:   16480,000 ns/op
                 system·p0.90:   17376,000 ns/op
                 system·p0.95:   17568,000 ns/op
                 system·p0.99:   34752,000 ns/op
                 system·p0.999:  84386,304 ns/op
                 system·p0.9999: 168995,277 ns/op
                 system·p1.00:   258560,000 ns/op

Iteration   4: 17042,794 ±(99.9%) 90,027 ns/op
                 system·p0.00:   16064,000 ns/op
                 system·p0.50:   16480,000 ns/op
                 system·p0.90:   16576,000 ns/op
                 system·p0.95:   17472,000 ns/op
                 system·p0.99:   34513,280 ns/op
                 system·p0.999:  79785,856 ns/op
                 system·p0.9999: 156548,582 ns/op
                 system·p1.00:   252160,000 ns/op

Iteration   5: 16795,442 ±(99.9%) 59,420 ns/op
                 system·p0.00:   15984,000 ns/op
                 system·p0.50:   16224,000 ns/op
                 system·p0.90:   17184,000 ns/op
                 system·p0.95:   17632,000 ns/op
                 system·p0.99:   33088,000 ns/op
                 system·p0.999:  49870,272 ns/op
                 system·p0.9999: 53027,597 ns/op
                 system·p1.00:   264704,000 ns/op

Iteration   6: 16809,345 ±(99.9%) 56,646 ns/op
                 system·p0.00:   16016,000 ns/op
                 system·p0.50:   16224,000 ns/op
                 system·p0.90:   17152,000 ns/op
                 system·p0.95:   17568,000 ns/op
                 system·p0.99:   33088,000 ns/op
                 system·p0.999:  50048,000 ns/op
                 system·p0.9999: 54154,048 ns/op
                 system·p1.00:   185088,000 ns/op

Iteration   7: 16699,995 ±(99.9%) 56,240 ns/op
                 system·p0.00:   16032,000 ns/op
                 system·p0.50:   16208,000 ns/op
                 system·p0.90:   17056,000 ns/op
                 system·p0.95:   17184,000 ns/op
                 system·p0.99:   34048,000 ns/op
                 system·p0.999:  49729,664 ns/op
                 system·p0.9999: 52672,166 ns/op
                 system·p1.00:   165888,000 ns/op

Iteration   8: 16719,682 ±(99.9%) 50,676 ns/op
                 system·p0.00:   16016,000 ns/op
                 system·p0.50:   16224,000 ns/op
                 system·p0.90:   17120,000 ns/op
                 system·p0.95:   17248,000 ns/op
                 system·p0.99:   32762,240 ns/op
                 system·p0.999:  48261,824 ns/op
                 system·p0.9999: 51776,582 ns/op
                 system·p1.00:   52416,000 ns/op

Iteration   9: 17067,722 ±(99.9%) 98,131 ns/op
                 system·p0.00:   16128,000 ns/op
                 system·p0.50:   16480,000 ns/op
                 system·p0.90:   16576,000 ns/op
                 system·p0.95:   17472,000 ns/op
                 system·p0.99:   34730,880 ns/op
                 system·p0.999:  85504,000 ns/op
                 system·p0.9999: 150274,074 ns/op
                 system·p1.00:   268800,000 ns/op

Iteration  10: 17503,602 ±(99.9%) 99,186 ns/op
                 system·p0.00:   16128,000 ns/op
                 system·p0.50:   16576,000 ns/op
                 system·p0.90:   17504,000 ns/op
                 system·p0.95:   17760,000 ns/op
                 system·p0.99:   35008,000 ns/op
                 system·p0.999:  90303,232 ns/op
                 system·p0.9999: 166847,846 ns/op
                 system·p1.00:   243968,000 ns/op



Result "org.sample.IntrinsicsArrayCopy_AverageTime.system":
  N = 296017
  mean =  16954,758 ±(99.9%) 47,524 ns/op

  Histogram, ns/op:
    [      0,000,  250000,000) = 296012 
    [ 250000,000,  500000,000) = 4 
    [ 500000,000,  750000,000) = 0 
    [ 750000,000, 1000000,000) = 0 
    [1000000,000, 1250000,000) = 0 
    [1250000,000, 1500000,000) = 0 
    [1500000,000, 1750000,000) = 0 
    [1750000,000, 2000000,000) = 0 
    [2000000,000, 2250000,000) = 0 
    [2250000,000, 2500000,000) = 0 
    [2500000,000, 2750000,000) = 0 
    [2750000,000, 3000000,000) = 0 
    [3000000,000, 3250000,000) = 0 
    [3250000,000, 3500000,000) = 0 
    [3500000,000, 3750000,000) = 1 

  Percentiles, ns/op:
      p(0,0000) =  15984,000 ns/op
     p(50,0000) =  16416,000 ns/op
     p(90,0000) =  17312,000 ns/op
     p(95,0000) =  17536,000 ns/op
     p(99,0000) =  33588,480 ns/op
     p(99,9000) =  73213,696 ns/op
     p(99,9900) = 130174,848 ns/op
     p(99,9990) = 264867,103 ns/op
     p(99,9999) = 3731456,000 ns/op
    p(100,0000) = 3731456,000 ns/op


# Run complete. Total time: 00:00:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                Mode     Cnt        Score     Error  Units
IntrinsicsArrayCopy_AverageTime.manual                 sample   86663   115330,771 ± 267,108  ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p0.00    sample           111360,000            ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p0.50    sample           111360,000            ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p0.90    sample           118016,000            ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p0.95    sample           131584,000            ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p0.99    sample           180736,000            ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p0.999   sample           260694,016            ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p0.9999  sample           390830,490            ns/op
IntrinsicsArrayCopy_AverageTime.manual:manual·p1.00    sample          5234688,000            ns/op
IntrinsicsArrayCopy_AverageTime.system                 sample  296017    16954,758 ±  47,524  ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p0.00    sample            15984,000            ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p0.50    sample            16416,000            ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p0.90    sample            17312,000            ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p0.95    sample            17536,000            ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p0.99    sample            33588,480            ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p0.999   sample            73213,696            ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p0.9999  sample           130174,848            ns/op
IntrinsicsArrayCopy_AverageTime.system:system·p1.00    sample          3731456,000            ns/op

